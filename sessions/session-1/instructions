***** In each one of the scripts you will need to import:

import argparse
import boto3


*****************
** Excersice I **
*****************


*** Create a VPC ****

- Write a script that gets 3 args: region, cidr, tenancy

Example for parsing args function:

hints/vpc/example_parse_args

- Create the vpc with CIDR 10.21.0.0/16, in us-east-1 and tenancy default

Example for creating a vpc:
hints/vpc/example_create_vpc  


If you finished:

- Use the method wait_until_available upon the vpc resource to wait until the vpc reached available state

Example for setting the wait:

hints/vpc/example_wait_for_vpc

- Tag the VPC with name: opsschool-1 

No hints... Use boto documentation...

- Run pylint on your code and fix the finding (pylint yourcode.py)
If it's not already installed, here is a reference: https://www.pylint.org/

##########################################################################################################################################
##########################################################################################################################################

******************
** Excersice II **
******************

*** Write a script that get region as arg, describe all vpc's and let the user select the vpc to act on ***

Example for getting args:
hints/igw_and_dhcp/example_select

- Create Internet Gateway

Example for creating internet gateway:

hints/igw_and_dhcp/example_create_internet_gateway

- Create dhcp_options - set domain-name-servers to ip's 10.21.0.10, 10.21.2.10

Example for creating dhcp options:
hints/igw_and_dhcp/example_create_dhcp_options

- Associate the internet gateway and the dhcp_options with the VPC

No example this time... use boto documentation :-)

###########################################################################################################################################
###########################################################################################################################################


*******************
** Excersice III **
*******************

*** Create a script that creates 2 subnets, 2 route tables, create default gateway routes in each and associate the route tables with the relevant subnet ***

- Create 2 subnets in us-east-1c and tag them Private_1c, Public_1c

hints/subnets_and_routes/example_create_subnet

- Allocate elastic ip, to use for the nat gateway

hints/subnets_and_routes/example_allocate_eip

- Create a nat gateway, make sure to use the Public subnet as SubnetId, and use that elastic ip that you allocated

hints/subnets_and_routes/example_create_nat_gateway

- Create 2 route tables and tag them Private-1c & Public-1c

hints/subnets_and_routes/example_create_route_table

- create the following routes in Private-1c:
0.0.0.0/0 nat_gateway_id

hints/subnets_and_routes/example_add_nat_gateway_route

- Create the following routes in Public-1c:
0.0.0.0/0 internet_gateway_id

No hints, use the documentation....

- Associate the private and public route tables with the private and public subnets accordingly 

hints/subnets_and_routes/example_associate_route_table
